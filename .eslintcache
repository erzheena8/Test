[{"D:\\testEnglish\\Test\\test_english\\src\\index.tsx":"1","D:\\testEnglish\\Test\\test_english\\src\\App.tsx":"2","D:\\testEnglish\\Test\\test_english\\src\\Components\\Phrase\\Phrase.tsx":"3","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\PutWords\\PutWords.tsx":"4","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\CloudsWords.tsx":"5","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\Cloud\\Cloud.tsx":"6","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\Cloud\\CloudContainer.tsx":"7","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Test.tsx":"8","D:\\testEnglish\\Test\\test_english\\src\\Components\\CheckTest\\CheckTest.tsx":"9","D:\\testEnglish\\Test\\test_english\\src\\reportWebVitals.ts":"10"},{"size":500,"mtime":1607595030578,"results":"11","hashOfConfig":"12"},{"size":2767,"mtime":1612114916081,"results":"13","hashOfConfig":"12"},{"size":447,"mtime":1612033960057,"results":"14","hashOfConfig":"12"},{"size":1984,"mtime":1612110377555,"results":"15","hashOfConfig":"12"},{"size":4613,"mtime":1612113267988,"results":"16","hashOfConfig":"12"},{"size":1839,"mtime":1612085264925,"results":"17","hashOfConfig":"12"},{"size":1361,"mtime":1612101588049,"results":"18","hashOfConfig":"12"},{"size":1101,"mtime":1612112298665,"results":"19","hashOfConfig":"12"},{"size":1660,"mtime":1612112827568,"results":"20","hashOfConfig":"12"},{"size":425,"mtime":1607595030578,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"b4o5hs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\testEnglish\\Test\\test_english\\src\\index.tsx",[],["44","45"],"D:\\testEnglish\\Test\\test_english\\src\\App.tsx",["46","47","48","49"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Phrase\\Phrase.tsx",["50"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\PutWords\\PutWords.tsx",["51"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\CloudsWords.tsx",["52"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\Cloud\\Cloud.tsx",[],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\CloudsWords\\Cloud\\CloudContainer.tsx",["53","54"],"import React, {useEffect, useState} from 'react'\r\nimport {Cloud} from \"./Cloud\";\r\nimport {PhraseEnType} from \"../../../../App\";\r\n\r\ntype CloudContainerPropsType = {\r\n    currentValue: PhraseEnType | null\r\n    setCurrentWord: (currentValue: PhraseEnType | null) => void\r\n    words: Array<PhraseEnType>\r\n    setWords: (words: Array<PhraseEnType>) => void\r\n    setAnswer: (answer: string) => void\r\n\r\n}\r\n\r\nexport const CloudContainer: React.FC<CloudContainerPropsType> = React.memo(\r\n    ({currentValue, setCurrentWord, words, setWords, setAnswer}) => {\r\n        // const [wordsList, setWordsList] = useState<Array<PhraseEnType>>([])\r\n        useEffect(() => {\r\n            currentValue && setWords([...words, currentValue])\r\n            setTimeout(() => {\r\n                setCurrentWord(null)\r\n            }, 0)\r\n        }, [currentValue])\r\n\r\n        const setNewWordsList = (word: PhraseEnType) => {\r\n            setCurrentWord(word)\r\n            let newWordsList = words.filter(wl => wl.id !== word.id)\r\n            setWords(newWordsList)\r\n            setAnswer('')\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    words.map(wl => {\r\n                        return <Cloud key={wl.id} word={wl} clickHandler={setNewWordsList}>{wl.word}</Cloud>\r\n                    })\r\n                }\r\n            </>\r\n        );\r\n\r\n    })","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Test.tsx",[],"D:\\testEnglish\\Test\\test_english\\src\\Components\\CheckTest\\CheckTest.tsx",["55"],"D:\\testEnglish\\Test\\test_english\\src\\reportWebVitals.ts",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":57,"column":17,"nodeType":"62","messageId":"63","endLine":57,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":59,"column":28,"nodeType":"66","messageId":"67","endLine":59,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":61,"column":21,"nodeType":"62","messageId":"63","endLine":61,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":66,"column":8,"nodeType":"70","endLine":66,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":12,"column":13,"nodeType":"74","endLine":12,"endColumn":31},{"ruleId":"68","severity":1,"message":"75","line":21,"column":8,"nodeType":"70","endLine":21,"endColumn":19,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":9,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"68","severity":1,"message":"82","line":22,"column":12,"nodeType":"70","endLine":22,"endColumn":26,"suggestions":"83"},{"ruleId":"77","severity":1,"message":"84","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'phraseEn' and 'randomWords'. Either include them or remove the dependency array.","ArrayExpression",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setSentence'. Either include it or remove the dependency array. If 'setSentence' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["88"],"@typescript-eslint/no-unused-vars","'Cloud' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setCurrentWord', 'setWords', and 'words'. Either include them or remove the dependency array. If 'setWords' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["89"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [phraseEn, randomWords]",{"range":"96","text":"97"},"Update the dependencies array to be: [setSentence, wordsList]",{"range":"98","text":"99"},"Update the dependencies array to be: [currentValue, setCurrentWord, setWords, words]",{"range":"100","text":"101"},[2094,2096],"[phraseEn, randomWords]",[799,810],"[setSentence, wordsList]",[821,835],"[currentValue, setCurrentWord, setWords, words]"]