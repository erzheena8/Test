[{"D:\\testEnglish\\Test\\test_english\\src\\index.tsx":"1","D:\\testEnglish\\Test\\test_english\\src\\App.tsx":"2","D:\\testEnglish\\Test\\test_english\\src\\Components\\Phrase\\Phrase.tsx":"3","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Test.tsx":"4","D:\\testEnglish\\Test\\test_english\\src\\Components\\CheckTest\\CheckTest.tsx":"5","D:\\testEnglish\\Test\\test_english\\src\\reportWebVitals.ts":"6","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Cloud\\Cloud.tsx":"7","D:\\testEnglish\\Test\\test_english\\src\\Container\\CloudsWordsContainer.tsx":"8","D:\\testEnglish\\Test\\test_english\\src\\utils\\item.ts":"9","D:\\testEnglish\\Test\\test_english\\src\\Container\\PutWordsContainer.tsx":"10","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\SetOfWords\\PutClouds.tsx":"11","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\ResultPhrase\\PutResult.tsx":"12"},{"size":500,"mtime":1607595030578,"results":"13","hashOfConfig":"14"},{"size":5904,"mtime":1612444746419,"results":"15","hashOfConfig":"14"},{"size":447,"mtime":1612120336715,"results":"16","hashOfConfig":"14"},{"size":1499,"mtime":1612436910900,"results":"17","hashOfConfig":"14"},{"size":2098,"mtime":1612444941754,"results":"18","hashOfConfig":"14"},{"size":425,"mtime":1607595030578,"results":"19","hashOfConfig":"14"},{"size":885,"mtime":1612366958513,"results":"20","hashOfConfig":"14"},{"size":728,"mtime":1612275654250,"results":"21","hashOfConfig":"14"},{"size":46,"mtime":1612337514219,"results":"22","hashOfConfig":"14"},{"size":468,"mtime":1612275654190,"results":"23","hashOfConfig":"14"},{"size":1965,"mtime":1612367406856,"results":"24","hashOfConfig":"14"},{"size":2047,"mtime":1612367072991,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"b4o5hs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"D:\\testEnglish\\Test\\test_english\\src\\index.tsx",[],["55","56"],"D:\\testEnglish\\Test\\test_english\\src\\App.tsx",["57","58","59","60"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Phrase\\Phrase.tsx",["61"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Test.tsx",["62","63","64","65","66","67","68","69"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\CheckTest\\CheckTest.tsx",[],"D:\\testEnglish\\Test\\test_english\\src\\reportWebVitals.ts",[],["70","71"],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\Cloud\\Cloud.tsx",["72"],"import React from 'react'\r\nimport classes from './Cloud.module.sass'\r\nimport {PhraseEnType} from \"../../../App\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport {ItemType} from \"../../../utils/item\";\r\n\r\ntype CloudPropsType = {\r\n    id: number\r\n}\r\n\r\nexport const Cloud: React.FC<CloudPropsType> =\r\n    ({\r\n         children,\r\n         id\r\n\r\n     }) => {\r\n        const [{isDragging}, drag] = useDrag({\r\n            item: {\r\n                type: ItemType.WORD,\r\n                id: id\r\n            },\r\n            collect: monitor => ({\r\n                isDragging: !!monitor.isDragging()\r\n            })\r\n        })\r\n        return (\r\n            // <div className={classes.emptyCloudItem}>\r\n                 <div className={`${classes.cloudItem} ${isDragging && classes.hidden}`}\r\n                              ref={drag}>{children}</div>\r\n            // </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n","D:\\testEnglish\\Test\\test_english\\src\\Container\\CloudsWordsContainer.tsx",[],"D:\\testEnglish\\Test\\test_english\\src\\utils\\item.ts",[],"D:\\testEnglish\\Test\\test_english\\src\\Container\\PutWordsContainer.tsx",[],"D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\SetOfWords\\PutClouds.tsx",["73","74","75","76","77"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport classes from './PutClouds.module.sass'\r\nimport {PhraseEnType, WordContext} from '../../../App'\r\nimport {DropTarget, useDrop} from 'react-dnd';\r\nimport {ItemType} from \"../../../utils/item\";\r\nimport {Cloud} from \"../Cloud/Cloud\";\r\n\r\n\r\ntype PutCloudsPropsType = {\r\n    words: Array<PhraseEnType>\r\n    // currentValue: PhraseEnType | null\r\n    // setCurrentWord: (currentWordPut: PhraseEnType | null) => void\r\n    // setSentence: (resultSentence: Array<string>) => void\r\n    // setAnswer: (answer: string) => void\r\n    // setDisabled: (disabled: boolean) =>void\r\n\r\n}\r\n\r\n\r\nexport const PutClouds: React.FC<PutCloudsPropsType> =\r\n    ({\r\n         words,\r\n         children,\r\n         ...otherProps\r\n     }) => {\r\n\r\n        const {putWordCloud} = useContext(WordContext)\r\n\r\n        const [{isOver}, drop] = useDrop({\r\n            accept: ItemType.WORD,\r\n            //@ts-ignore\r\n            drop: (item, monitor) => putWordCloud(item.id),\r\n            collect: monitor => ({\r\n                isOver: !!monitor.isOver()\r\n            })\r\n        })\r\n\r\n        // useEffect(() => {\r\n        //     if (wordsList.length === 0) {\r\n        //         otherProps.setDisabled(true)\r\n        //     } else otherProps.setDisabled(false)\r\n        //\r\n        //     let resultSentence = wordsList.map(wl => {\r\n        //         if (wl.word!==null) return wl.word\r\n        //     })\r\n        //     //@ts-ignore\r\n        //     setSentence(resultSentence)\r\n        // }, [wordsList])\r\n\r\n\r\n        return (\r\n            <div className={classes.clouds} ref={drop}>\r\n                {\r\n                    words.filter(w => {\r\n                        if (w.status === 'cloud') return w\r\n                    })\r\n                        .map(w => {\r\n                            return <Cloud key={w.id} id={w.id}>{w.word}</Cloud>\r\n                        })\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }","D:\\testEnglish\\Test\\test_english\\src\\Components\\Test\\ResultPhrase\\PutResult.tsx",["78","79","80","81"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport classes from './PutResult.module.sass'\r\nimport {PhraseEnType, WordContext} from '../../../App'\r\nimport {DropTarget, useDrop} from 'react-dnd';\r\nimport {ItemType} from \"../../../utils/item\";\r\nimport {Cloud} from '../Cloud/Cloud';\r\n\r\n\r\ntype PutResultPropsType = {\r\n    words: Array<PhraseEnType>\r\n    // currentValue: PhraseEnType | null\r\n    // setCurrentWord: (currentWordPut: PhraseEnType | null) => void\r\n    // setSentence: (resultSentence: Array<string>) => void\r\n    // setAnswer: (answer: string) => void\r\n    // setDisabled: (disabled: boolean) =>void\r\n\r\n}\r\n\r\n\r\nexport const PutResult: React.FC<PutResultPropsType> =\r\n    ({\r\n         words,\r\n         children,\r\n         ...otherProps\r\n     }) => {\r\n\r\n        const {putWordResult} = useContext(WordContext)\r\n        const [{isOver}, drop] = useDrop({\r\n            accept: ItemType.WORD,\r\n            //@ts-ignore\r\n            drop: (item, monitor) => putWordResult(item.id),\r\n            collect: monitor => ({\r\n                isOver: !!monitor.isOver()\r\n            })\r\n        })\r\n        // useEffect(() => {\r\n        //     if (wordsList.length === 0) {\r\n        //         otherProps.setDisabled(true)\r\n        //     } else otherProps.setDisabled(false)\r\n        //\r\n        //     let resultSentence = wordsList.map(wl => {\r\n        //         if (wl.word!==null) return wl.word\r\n        //     })\r\n        //     //@ts-ignore\r\n        //     setSentence(resultSentence)\r\n        // }, [wordsList])\r\n\r\n\r\n        return (\r\n            <div className={classes.put} ref={drop}>\r\n                <div className={`${classes.putItem}`} >\r\n                    {words\r\n                        .map(w => {\r\n                            return <Cloud key={w.id} id={w.id}>{w.word}</Cloud>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className={classes.putItem}></div>\r\n                <div className={classes.putItem}></div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":63,"column":8,"nodeType":"88","endLine":63,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":85,"column":8,"nodeType":"88","endLine":85,"endColumn":11,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":92,"column":43,"nodeType":"94","messageId":"95","endLine":92,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":107,"column":59,"nodeType":"94","messageId":"95","endLine":107,"endColumn":61},{"ruleId":"96","severity":1,"message":"97","line":12,"column":13,"nodeType":"98","endLine":12,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":24,"column":12,"nodeType":"101","messageId":"102","endLine":24,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":24,"column":24,"nodeType":"101","messageId":"102","endLine":24,"endColumn":37},{"ruleId":"99","severity":1,"message":"105","line":26,"column":11,"nodeType":"101","messageId":"102","endLine":26,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":39,"column":1,"nodeType":"108","messageId":"109","endLine":39,"endColumn":118},{"ruleId":"106","severity":1,"message":"107","line":40,"column":1,"nodeType":"108","messageId":"109","endLine":40,"endColumn":82},{"ruleId":"106","severity":1,"message":"107","line":41,"column":1,"nodeType":"108","messageId":"109","endLine":41,"endColumn":109},{"ruleId":"106","severity":1,"message":"107","line":42,"column":1,"nodeType":"108","messageId":"109","endLine":42,"endColumn":93},{"ruleId":"82","replacedBy":"110"},{"ruleId":"84","replacedBy":"111"},{"ruleId":"99","severity":1,"message":"112","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"113","line":1,"column":39,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"114","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":29,"column":17,"nodeType":"101","messageId":"102","endLine":29,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":54,"column":36,"nodeType":"94","messageId":"95","endLine":54,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"113","line":1,"column":39,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"114","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":28,"column":17,"nodeType":"101","messageId":"102","endLine":28,"endColumn":23},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomWords'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'sorting'. Either include it or remove the dependency array.",["119"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'wordsCloud' is assigned a value but never used.","'setWordsCloud' is assigned a value but never used.","'sorting' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["116"],["117"],"'PhraseEnType' is defined but never used.","'useState' is defined but never used.","'DropTarget' is defined but never used.","'isOver' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [randomWords]",{"range":"124","text":"125"},"Update the dependencies array to be: [f, sorting]",{"range":"126","text":"127"},[2105,2107],"[randomWords]",[2696,2699],"[f, sorting]"]